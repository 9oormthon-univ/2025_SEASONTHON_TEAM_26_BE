plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'me.nam'
version = '0.0.1-SNAPSHOT'
description = 'DreamDrivers-Server'

java {
	toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

configurations {
	compileOnly { extendsFrom annotationProcessor }
}

repositories { mavenCentral() }

dependencies {
	// Web (MVC)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Security & OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// WebClient 사용하려면 WebFlux 스타터 필요
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// JPA & MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Swagger(OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// JWT (jjwt)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Flyway (마이그레이션)
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}