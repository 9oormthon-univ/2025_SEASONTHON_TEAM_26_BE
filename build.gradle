plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'me.nam'
version = '0.0.1-SNAPSHOT'
description = 'DreamDrivers-Server'

java {
	toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

configurations {
	compileOnly { extendsFrom annotationProcessor }
}

repositories { mavenCentral() }

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient 쓰면 유지

	// JPA & MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// ✅ JJWT 0.9.1 (구버전)
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// ✅ Java 11+에서 필요한 JAXB 런타임(및 activation)
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'com.sun.activation:javax.activation:1.2.0'

	// Flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "io.netty:netty-resolver-dns-native-macos:4.1.114.Final:osx-aarch_64"
}


tasks.named('test') {
	useJUnitPlatform()
}